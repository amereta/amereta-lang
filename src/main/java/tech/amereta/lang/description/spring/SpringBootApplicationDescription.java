package tech.amereta.lang.description.spring;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import tech.amereta.lang.description.AbstractApplication;
import tech.amereta.lang.description.spring.db.SpringDBModuleDescription;
import tech.amereta.lang.description.spring.model.SpringModelModuleDescription;
import tech.amereta.lang.description.spring.security.SpringSecurityModuleDescription;

import java.lang.annotation.Annotation;
import java.util.List;

public class SpringBootApplicationDescription implements AbstractApplication {

    private String owner;

    @NotNull(message = "Application's name must not be null!")
    private String name;

    @NotNull(message = "Application's package must not be null!")
    @JsonProperty("package")
    private String packageName;

    private String description = "Generated by Amereta!";

    private String javaVersion = "17";

    private String springVersion = "3.1.3";

    private String ameretaVersion = "0.1.0";

    private String port = "8080";

    @JsonTypeInfo(
            use = JsonTypeInfo.Id.NAME,
            property = "module",
            visible = true
    )
    @JsonSubTypes({
            @JsonSubTypes.Type(value = SpringModelModuleDescription.class, name = "MODEL"),
            @JsonSubTypes.Type(value = SpringDBModuleDescription.class, name = "DB"),
            @JsonSubTypes.Type(value = SpringSecurityModuleDescription.class, name = "SECURITY"),
    })
    @Valid
    private List<AbstractSpringModuleDescription> modules;

    @JsonIgnore
    private Class<? extends Annotation> generator = SpringBootGenerator.class;

    @JsonIgnore
    private Class<? extends Annotation> validator = SpringBootValidator.class;

    @Override
    public String getOwner() {
        return owner;
    }

    public void setOwner(String owner) {
        this.owner = owner;
    }

    @Override
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPackageName() {
        return packageName;
    }

    public void setPackageName(String packageName) {
        this.packageName = packageName;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getJavaVersion() {
        return javaVersion;
    }

    public void setJavaVersion(String javaVersion) {
        this.javaVersion = javaVersion;
    }

    public String getSpringVersion() {
        return springVersion;
    }

    public void setSpringVersion(String springVersion) {
        this.springVersion = springVersion;
    }

    public String getAmeretaVersion() {
        return ameretaVersion;
    }

    public void setAmeretaVersion(String ameretaVersion) {
        this.ameretaVersion = ameretaVersion;
    }

    public String getPort() {
        return port;
    }

    public void setPort(String port) {
        this.port = port;
    }

    public List<AbstractSpringModuleDescription> getModules() {
        return modules;
    }

    public void setModules(List<AbstractSpringModuleDescription> modules) {
        this.modules = modules;
    }

    @Override
    public Class<? extends Annotation> getGenerator() {
        return generator;
    }

    public void setGenerator(Class<? extends Annotation> generator) {
        this.generator = generator;
    }

    @Override
    public Class<? extends Annotation> getValidator() {
        return validator;
    }

    public void setValidator(Class<? extends Annotation> validator) {
        this.validator = validator;
    }
}
